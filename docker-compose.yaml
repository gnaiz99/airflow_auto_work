---
networks:
    airflow:

services:
    # clickhouse:
    #     image: clickhouse/clickhouse-server:23.3.22.3-alpine
    #     container_name: clickhouse
    #     hostname: clickhouse
    #     volumes:
    #         - ${PWD}/fs/volumes/clickhouse/etc/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml
    #         - ${PWD}/fs/volumes/clickhouse/etc/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml
    #     ports:
    #         - 8123:8123
    #         - 9000:9000
    postgres:
        image: postgres:14-alpine
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_DB=airflow
            - POSTGRES_PASSWORD=airflow
            - PGDATA=/var/lib/postgresql/data/pgdata
            - POSTGRES_INITDB_ARGS=--auth-local=md5
        ports:
            - 5432:5432
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./database:/var/lib/postgresql/data
        command: >
            postgres
              -c listen_addresses=*
              -c logging_collector=on
              -c log_destination=stderr
              -c max_connections=200
              -c password_encryption=md5
        networks:
            - airflow
    redis:
        image: redis:5.0.5
        environment:
            REDIS_HOST: redis
            REDIS_PORT: 6379
        ports:
            - 6379:6379
        networks:
            - airflow
    webserver:
        env_file:
            - .env
        build: .
        ports:
            - 8080:8080
        volumes:
            - ./dags:/opt/airflow/dags
            - ./logs:/opt/airflow/logs
            - ./plugins:/opt/airflow/plugins
            - /var/run/docker.sock:/var/run/docker.sock
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s
        depends_on:
            - postgres
            - redis
            - initdb
        command: webserver
        healthcheck:
            test: [CMD-SHELL, '[ -f /opt/airflow/airflow-webserver.pid ]']
            interval: 30s
            timeout: 30s
            retries: 3
        networks:
            - airflow
  #  flower:
  #    build: .
  #    env_file:
  #      - .env
  #    ports:
  #      - 5555:5555
  #    depends_on:
  #      - redis
  #    deploy:
  #      restart_policy:
  #        condition: on-failure
  #        delay: 8s
  #        max_attempts: 3
  #    volumes:
  #      - ./logs:/opt/airflow/logs
  #    command: celery flower
  #    networks:
  #      - airflow
    scheduler:
        build: .
        env_file:
            - .env
        environment:
            - IS_LOCAL=1
        volumes:
            - ./dags:/opt/airflow/dags
            - ./logs:/opt/airflow/logs
            - ./plugins:/opt/airflow/plugins
            - /var/run/docker.sock:/var/run/docker.sock
        command: scheduler
        depends_on:
            - initdb
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                window: 120s
        networks:
            - airflow

    worker:
        build: .
        env_file:
            - .env
        environment:
            - IS_LOCAL=1
        volumes:
            - ./dags:/opt/airflow/dags
            - ./logs:/opt/airflow/logs
            - ./plugins:/opt/airflow/plugins
            - /var/run/docker.sock:/var/run/docker.sock
        command: celery worker -q default,acb_queue,heavy_queue
        depends_on:
            - scheduler
        deploy:
            restart_policy:
                condition: on-failure
                delay: 8s
                max_attempts: 3
        networks:
            - airflow

    initdb:
        build: .
        env_file:
            - .env
        volumes:
            - ./dags:/opt/airflow/dags
            - ./logs:/opt/airflow/logs
            - ./plugins:/opt/airflow/plugins
            - /var/run/docker.sock:/var/run/docker.sock
        entrypoint: /bin/bash
        deploy:
            restart_policy:
                condition: on-failure
                delay: 8s
                max_attempts: 5
        command: -c "airflow db init && airflow users create --firstname admin --lastname admin --email admin --password admin --username admin --role Admin"
        depends_on:
            - redis
            - postgres
        networks:
            - airflow
